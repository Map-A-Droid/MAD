# Development env
FROM local_mad_production:latest AS dev_test
RUN pip install tox
# Versions of python to install for pyenv. These are used when tox executes specific
# python versions. The correct versions need to be added to tox.ini under tox/envlist
ENV PYTHON_VERSIONS 3.6.0 3.7.0 3.8.0
COPY requirements-test.txt /usr/src/app/
ENTRYPOINT ["bash"]
# Need to re-add some required dependencies for tox to compile the new envs
RUN apt-get install -y --no-install-recommends \
# pyenv
build-essential libssl-dev zlib1g-dev libbz2-dev \
libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
xz-utils tk-dev libffi-dev liblzma-dev python-openssl git \
# python build
libffi-dev libgdbm-dev libsqlite3-dev libssl-dev zlib1g-dev

# Map the user to avoid perm conflict
ARG USER_NAME=dockeruser
ARG UID=${UID}
ARG GID=${GID}
RUN groupadd -g $GID $USER_NAME; useradd -l -r -m -u $UID -g $GID $USER_NAME
ENV USER $USER_NAME
# Install pyenv
# @TODO - How to install as a user and not root?
ENV HOME=/home/dockeruser
ENV PYENV_ROOT $HOME/.pyenv
ENV PATH="$PYENV_ROOT/bin:$PATH"
ENV PATH="$PYENV_ROOT/shims:$PATH"
RUN curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
RUN chown -R dockeruser:dockeruser -R $HOME
RUN for version in $PYTHON_VERSIONS; do \
      pyenv install $version; \
      pyenv local $version; \
      pip install --upgrade setuptools pip; \
      pyenv local --unset; \
    done
RUN echo "pyenv local $PYTHON_VERSIONS" >> ~/.bashrc
RUN pyenv local $PYTHON_VERSIONS
